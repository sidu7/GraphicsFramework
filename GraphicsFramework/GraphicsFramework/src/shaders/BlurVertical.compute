#version 430
layout(local_size_x = 1, local_size_y = 128, local_size_z = 1) in;

uniform blurKernel{ float weights[101]; };
uniform int width;

layout(rgba32f) uniform readonly image2D src;
layout(rgba32f) uniform writeonly image2D dst;

shared vec4 v[128 + 101];

void main()
{
	ivec2 gpos = ivec2(gl_GlobalInvocationID.xy);

	uint i = gl_LocalInvocationID.y;

	v[i] = imageLoad(src, gpos + ivec2(0, -width));
	if (i < 2 * width)
	{
		v[i + 128] = imageLoad(src, gpos + ivec2(0, 128 - width));
	}

	barrier();

	vec4 sum = vec4(0.0);
	uint k = i;
	for (uint j = 0; j <= 2 * width; ++j)
	{
		sum += weights[j] * v[k];
		++k;
	}

	imageStore(dst, gpos, sum);
}